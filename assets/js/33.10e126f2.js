(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{480:function(e,t,o){e.exports=o.p+"assets/img/developer-overview.6701007c.png"},573:function(e,t,o){"use strict";o.r(t);var r=o(8),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"frontmatter-title"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),r("p",[e._v("A "),r("strong",[e._v("Developer")]),e._v(" is you, if you wish to consume off-chain data from APIs. You do so using Airnodes. An Airnode is a first-party oracle that will push off-chain API data to your on-chain contract. In the diagram below your contract is called a requester. It will make a request to the on-chain RRP protocol contract (AirnodeRrp.sol) that will queue the request. The off-chain Airnode will access the queue, get the API data and perform a callback to the requester.")]),e._v(" "),r("p",[e._v("In summary you only need to do two things.")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("Call "),r("code",[e._v("makeRequest()")]),e._v(" on the AirnodeRrp.sol contract which returns a "),r("code",[e._v("requestId")]),e._v(".")])]),e._v(" "),r("li",[r("p",[e._v("Add a "),r("code",[e._v("myFulfill()")]),e._v(" function (call it what you like) to your requester (your contract) where the off-chain Airnode can send the requested data when ready. The data includes the same "),r("code",[e._v("requestId")]),e._v(" returned when the request was made.")]),e._v(" "),r("blockquote",[r("p",[r("img",{attrs:{src:o(480),alt:"call"}})])])])]),e._v(" "),r("p",[e._v("For a more detailed diagram see the first image in the "),r("RouterLink",{attrs:{to:"/next/grp-developers/call-an-airnode.html"}},[e._v("Calling an Airnode")]),e._v(" doc.")],1)])}),[],!1,null,null,null);t.default=a.exports}}]);