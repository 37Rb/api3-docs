(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{479:function(t,e,s){t.exports=s.p+"assets/img/call-an-airnode.f4557733.png"},572:function(t,e,s){"use strict";s.r(e);var a=s(8),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),a("TocHeader"),t._v(" "),a("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),t._v(" "),a("p",[t._v("A "),a("RouterLink",{attrs:{to:"/next/grp-developers/requesters-sponsors.html#what-is-a-requester"}},[t._v("requester")]),t._v(" (your contract) that has been sponsored can call an Airnode with a matching sponsor wallet. See "),a("RouterLink",{attrs:{to:"/next/grp-developers/requesters-sponsors.html"}},[t._v("Requesters and Sponsors")]),t._v(" on how to sponsor a requester and derive a sponsor wallet.")],1),t._v(" "),a("p",[t._v("Airnode is composed of two parts: the off-chain "),a("strong",[t._v("Airnode")]),t._v(" (cloud provider functions, e.g., AWS) and the on-chain "),a("strong",[t._v("protocol contract")]),t._v(" ( AirnodeRrp.sol). A requester calls the protocol contract which queues the requester's request. During its next run cycle, Airnode gets the request from the protocol queue and generates a response. The diagram below illustrates the mechanics of the entire process as does the diagram in the "),a("RouterLink",{attrs:{to:"/next/grp-developers/"}},[t._v("Overview")]),t._v(" doc for developers.")],1),t._v(" "),a("p",[t._v("The AirnodeRrp protocol is designed to be flexible and is meant to serve a variety of use cases. See the Airnode "),a("a",{attrs:{href:"https://github.com/api3dao/airnode-starter/blob/main/contracts/ExampleClient.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("requester examples"),a("OutboundLink")],1),t._v(" for some potential design patterns.")]),t._v(" "),a("p",[t._v("Ignoring the mechanics of the overall process, the requester primarily focuses on two tasks as indicated by points A & B in the diagram below when calling an Airnode.")]),t._v(" "),a("ul",[a("li",[a("span",{staticStyle:{color:"red"}},[t._v("A")]),t._v(": Make the request")]),t._v(" "),a("li",[a("span",{staticStyle:{color:"red"}},[t._v("B")]),t._v(": Accept the response")])]),t._v(" "),a("blockquote",[a("img",{attrs:{src:s(479)}})]),t._v(" "),a("p",[t._v("This remainder of this doc focuses on the following.")]),t._v(" "),a("ul",[a("li",[t._v("Make a request to the AirnodeRrp contract, call "),a("code",[t._v("makeRequest()")])]),t._v(" "),a("li",[t._v("Capture the response from the Airnode application, implement "),a("code",[t._v("myFulfill()")])]),t._v(" "),a("li",[t._v("Sponsoring the requester after it deployment")])]),t._v(" "),a("h2",{attrs:{id:"step-1-inherit-airnoderrpclient-sol"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-1-inherit-airnoderrpclient-sol"}},[t._v("#")]),t._v(" Step #1: Inherit AirnodeRrpClient.sol")]),t._v(" "),a("p",[t._v("To get started a requester inherits from the "),a("a",{attrs:{href:"https://github.com/api3dao/airnode/blob/master/packages/protocol/contracts/AirnodeRrpClient.sol",target:"_blank",rel:"noopener noreferrer"}},[t._v("AirnodeRrpClient.sol"),a("OutboundLink")],1),t._v(" contract. This will expose the AirnodeRrp.sol protocol contract to the requester.")]),t._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@api3/airnode-protocol/contracts/AirnodeRrpClient.sol"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyContract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" AirnodeRrpClient "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" airnodeAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AirnodeClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("airnodeAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("Note the constructor parameter "),a("code",[t._v("airnodeAddress")]),t._v(" which is the public address of the AirnodeRrp.sol protocol contract on the blockchain you wish to use. It is used by AirnodeRrpClient.sol to point itself to AirnodeRrp.sol. See the the list of available addresses below.")]),t._v(" "),a("blockquote",[a("ChainsSupported",{attrs:{version:"0.1.0"}})],1),t._v(" "),a("h2",{attrs:{id:"step-2-make-a-request"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-2-make-a-request"}},[t._v("#")]),t._v(" Step #2: Make a Request")]),t._v(" "),a("p",[t._v("There are three types of requests provided by the AirnodeRrp.sol contract. See "),a("RouterLink",{attrs:{to:"/next/reference/protocols/request-response/request.html#request-types"}},[t._v("Request Types")]),t._v(" in the Reference section for information related to each request type.")],1),t._v(" "),a("p",[t._v("This example will use a "),a("RouterLink",{attrs:{to:"/next/reference/protocols/request-response/request.html#_3-full-request"}},[t._v("full request")]),t._v(" type (note the "),a("code",[t._v("airnode.makeFullRequest")]),t._v(" function call in the code below) which is called from the client contract's own function "),a("code",[t._v("callTheAirnode")]),t._v(". The function "),a("code",[t._v("makeFullRequest")]),t._v(" requires the client contract pass all parameters needed by Airnode to call its underlying API.")],1),t._v(" "),a("p",[t._v("Once the request has been made to "),a("code",[t._v("airnode.makeFullRequest")]),t._v(" the AirnodeRrp.sol contract will return a "),a("code",[t._v("requestId")]),t._v(" confirming the request has been accepted and is in process of being executed. Your contract would most likely wish to track all requestIds. Note the line "),a("code",[t._v("incomingFulfillments[requestId] = true;")]),t._v(" in the code below that stores the requestIds in a mapping. This will be useful when the Airnode responds to the request later at the function ("),a("code",[t._v("airnodeCallback")]),t._v(") with the requestId, statusCode and the data requested.")]),t._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@api3/airnode-protocol/contracts/AirnodeRrpClient.sol"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyContract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" AirnodeRrpClient "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" incomingFulfillments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int256")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" fulfilledData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" airnodeAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AirnodeClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("airnodeAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callTheAirnode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" airnodeId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" endpointId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" requesterIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" designatedWallet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("calldata")]),t._v(" parameters "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Inbound API parameters which may already be ABI encoded")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" requestId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" airnode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("makeFullRequest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Make the Airnode request ")]),t._v("\n          airnodeId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// airnodeId")]),t._v("\n          endpointId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// endpointId")]),t._v("\n          requesterIndex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// requesterIndex")]),t._v("\n          designatedWallet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// designatedWallet")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fulfillAddress")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("airnodeCallback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("selector"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fulfillFunctionId")]),t._v("\n          parameters                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// API parameters")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      incomingFulfillments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("requestId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  \n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("airnodeCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The AirnodeRrp.sol protocol contract will callback here.")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" requestId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" statusCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("calldata")]),t._v(" data\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br")])]),a("h3",{attrs:{id:"request-parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-parameters"}},[t._v("#")]),t._v(" Request Parameters")]),t._v(" "),a("Fix",[t._v("The request parameters have changed.")]),t._v(" "),a("p",[t._v("A "),a("em",[t._v("full request")]),t._v(" using the AirnodeRrp.sol contract "),a("code",[t._v("makeFullRequest")]),t._v(" function requires all parameters needed by the Airnode application be passed at runtime. This is in contrast to a "),a("em",[t._v("regular or short request")]),t._v(" type that would use a template for some or all of the required parameters. See more about "),a("RouterLink",{attrs:{to:"/next/grp-developers/call-an-airnode.html#using-templates"}},[t._v("Using Templates")]),t._v(" below.")],1),t._v(" "),a("p",[t._v("Since the "),a("code",[t._v("callTheAirnode")]),t._v(" function is going to make a full request it must gather the following parameters to pass on to "),a("code",[t._v("airnode.makeFullRequest")]),t._v(".")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("airnodeId")]),t._v(" and "),a("strong",[t._v("endpointId")]),t._v(": As a pair these uniquely identify the endpoint desired at a particular Airnode.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("requesterIndex")]),t._v(" and "),a("strong",[t._v("designatedWallet")]),t._v(": The "),a("RouterLink",{attrs:{to:"/next/grp-developers/sponsorship.html#part-1-create-a-requester-record"}},[t._v("requesterIndex")]),t._v(" from the requester's record and the "),a("RouterLink",{attrs:{to:"/next/grp-developers/sponsorship.html#part-3-funding-airnodes"}},[t._v("designated wallet")]),t._v(" that the requester received when endorsing the Airnode being called. The designated wallet must belong to the requesterId.")],1)]),t._v(" "),a("li",[a("p",[a("strong",[t._v("fulfillAddress")]),t._v(" and "),a("strong",[t._v("fulfillFunctionId")]),t._v(": The public address of your client contract and its function that will be called when the request is returned.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("parameters")]),t._v(": Specify the API parameters and any "),a("RouterLink",{attrs:{to:"/next/reference/specifications/reserved-parameters.html"}},[t._v("reserved parameters")]),t._v(", these must be encoded. See "),a("a",{attrs:{href:""}},[t._v("Airnode ABI specifications")]),t._v(" for how these are encoded.")],1)])]),t._v(" "),a("p",[a("em",[t._v("More about parameters")])]),t._v(" "),a("Fix",[t._v("Not sure what to say about the encoding.")]),t._v(" "),a("p",[t._v("In most cases the parameters will be encoded off-chain and passed to the client contract. Most APIs will have some sort of security such as an apiKey which cannot be made public inside a client contract. Consider the following example which encodes the parameters off-chain before calling a client contract. This is done using  the "),a("a",{attrs:{href:"https://github.com/api3dao/airnode/tree/master/packages/airnode-abi",target:"_blank",rel:"noopener noreferrer"}},[t._v("@api3/airnode-abi"),a("OutboundLink")],1),t._v(" library.")]),t._v(" "),a("h4",{staticStyle:{color:"gray","margin-bottom":"-12px"}},[t._v("Off-chain parameter encoding using @api3/airnode-abi:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("```solidity\nimport { encode } from '@api3/airnode-abi';\n\nconst parameters = [\n  { type: 'bytes32', name: 'coin', value: 'ETH' },\n  { type: 'bytes32', name: 'apiKey', value: 'UHHS7SRGC975E' },\n];\nconst encodedData = encode(parameters);\n\nconsole.log(encodedData);\n// '0x...'\n```\n")])])]),a("p",[t._v("For additional information on request parameters when calling "),a("code",[t._v("airnode.makeFullRequest()")]),t._v(" see "),a("RouterLink",{attrs:{to:"/next/reference/protocols/request-response/request.html#request-parameters"}},[t._v("Request Parameters")]),t._v(" in the Reference section.")],1),t._v(" "),a("h2",{attrs:{id:"step-3-capture-the-response"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-3-capture-the-response"}},[t._v("#")]),t._v(" Step #3: Capture the Response")]),t._v(" "),a("p",[t._v("The request you made has been queued in the AirnodeRrp.sol contract. The off-chain Airnode you specified runs a continuous cycle and gathers its requests from AirnodeRrp.sol. All off-chain Airnodes gather, on a regular cycle, requests assigned to them from AirnodeRrp.sol.")]),t._v(" "),a("p",[t._v("As soon as the Airnode gets a request it will gather the data and start an on-chain transaction responding to the request. The Airnode calls the AirnodeRrp.sol contract function "),a("code",[t._v("fulfiil()")]),t._v(" which in turn will call the client contract, in this case, at "),a("code",[t._v("airnodeCallback")]),t._v(". Recall the request supplied the client contract address and the desired callback function which the AirnodeRrp.sol contract stored with the requestId for the purpose of the callback.")]),t._v(" "),a("Fix",[t._v("Does the code below need to `import { decode } from '@api3/airnode-abi';`.")]),t._v(" "),a("Fix",[t._v("And change decode to `int256 decodedData = decode(data, (int256));`.")]),t._v(" "),a("div",{staticClass:"language-solidity line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-solidity"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@api3/airnode-protocol/contracts/AirnodeClient.sol"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("contract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyContract")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" AirnodeRrpClient "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" incomingFulfillments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("mapping")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int256")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" fulfilledData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("constructor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("address")]),t._v(" airnodeAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("AirnodeClient")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("airnodeAddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callTheAirnode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("airnodeCallback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The AirnodeRrp.sol protocol contract will callback here.")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes32")]),t._v(" requestId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("uint256")]),t._v(" statusCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bytes")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("calldata")]),t._v(" data\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("external")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onlyAirnode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("incomingFulfillments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("requestId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No such request made"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" incomingFulfillments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("requestId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("statusCode "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int256")]),t._v(" decodedData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" abi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("decode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int256")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            fulfilledData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("requestId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" decodedData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// There was an error")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br")])]),a("h3",{attrs:{id:"response-parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#response-parameters"}},[t._v("#")]),t._v(" Response Parameters")]),t._v(" "),a("p",[t._v("The callback to a client contract will contain three parameters.")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("requestId")]),t._v(": First acquired when making the request and passed here as a reference to identify which request the response is for.")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("statusCode")]),t._v(": A statusCode of "),a("code",[t._v("0")]),t._v(" indicates a successful response and a "),a("code",[t._v("non-0")]),t._v(" statusCode an error. See "),a("RouterLink",{attrs:{to:"/next/reference/protocols/request-response/request.html#statuscode"}},[t._v("statusCode")]),t._v(" for a list of error statusCodes.")],1)]),t._v(" "),a("li",[a("p",[a("strong",[t._v("calldata")]),t._v(": For a successful response the requested data which has been encoded. Decode it using the function "),a("code",[t._v("decode()")]),t._v(" from the "),a("code",[t._v("abi")]),t._v(" object .")])])]),t._v(" "),a("h2",{attrs:{id:"step-4-deploy-and-sponsor-the-requester"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-4-deploy-and-sponsor-the-requester"}},[t._v("#")]),t._v(" Step #4: Deploy and Sponsor the Requester")]),t._v(" "),a("p",[t._v("Deploy the requester to the desired blockchain and then sponsor the requester. See "),a("RouterLink",{attrs:{to:"/next/grp-developers/requesters-sponsors.html#how-to-sponsor-a-requester"}},[t._v("Requesters and Sponsors")]),t._v(" to learn more about sponsoring a requester.")],1)],1)}),[],!1,null,null,null);e.default=n.exports}}]);